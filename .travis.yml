# For full coverage, we'd have to test all supported Python, MongoDB, and
# PyMongo combinations. However, that would result in an overly long build
# with a very large number of jobs, hence we only test a subset of all the
# combinations:
# * MongoDB v3.4 & the latest PyMongo v3.x is currently the "main" setup,
#   tested against Python v2.7, v3.5, v3.6, and PyPy.
# * Besides that, we test the lowest actively supported Python/MongoDB/PyMongo
#   combination: MongoDB v3.4, PyMongo v3.4, Python v2.7.
# * MongoDB v3.6 is tested against Python v3.6, and PyMongo v3.6, v3.7, v3.8.
#
# We should periodically check MongoDB Server versions supported by MongoDB
# Inc., add newly released versions to the test matrix, and remove versions
# which have reached their End of Life. See:
# 1. https://www.mongodb.com/support-policy.
# 2. https://docs.mongodb.com/ecosystem/drivers/driver-compatibility-reference/#python-driver-compatibility
#
# Reminder: Update README.rst if you change MongoDB versions we test.


language: python
python:
- 2.7
- 3.5
- 3.6
- pypy

dist: xenial

env:
  global:
    - MONGODB_3_4=3.4.17
    - MONGODB_3_6=3.6.12
  matrix:
    - MONGODB=${MONGODB_3_4} PYMONGO=3.x

matrix:

  # Finish the build as soon as one job fails
  fast_finish: true

  include:
  - python: 2.7
    env: MONGODB=${MONGODB_3_4} PYMONGO=3.4.x
  - python: 3.6
    env: MONGODB=${MONGODB_3_6} PYMONGO=3.x
  - python: 3.7
    env: MONGODB=${MONGODB_3_6} PYMONGO=3.x


install:
  # Install Mongo
  - wget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-${MONGODB}.tgz
  - tar xzf mongodb-linux-x86_64-${MONGODB}.tgz
  - ${PWD}/mongodb-linux-x86_64-${MONGODB}/bin/mongod --version
  # Install Python dependencies.
  - pip install --upgrade pip
  - pip install coveralls
  - pip install flake8 flake8-import-order
  - pip install tox         # tox 3.11.0 has requirement virtualenv>=14.0.0
  - pip install virtualenv  # virtualenv>=14.0.0 has dropped Python 3.2 support (and pypy3 is based on py32)
  # Install the tox venv.
  - tox -e $(echo py$TRAVIS_PYTHON_VERSION-mg$PYMONGO | tr -d . | sed -e 's/pypypy/pypy/') -- -e test
  # Install black for Python v3.7 only.
  - if [[ $TRAVIS_PYTHON_VERSION == '3.7' ]]; then pip install black; fi

before_script:
  - mkdir ${PWD}/mongodb-linux-x86_64-${MONGODB}/data
  - ${PWD}/mongodb-linux-x86_64-${MONGODB}/bin/mongod --dbpath ${PWD}/mongodb-linux-x86_64-${MONGODB}/data --logpath ${PWD}/mongodb-linux-x86_64-${MONGODB}/mongodb.log --fork
  - if [[ $TRAVIS_PYTHON_VERSION == '2.7' ]]; then flake8 .; else echo "flake8 only runs on py27"; fi   # Run flake8 for Python 2.7 only
  - if [[ $TRAVIS_PYTHON_VERSION == '3.7' ]]; then black --check .; else echo "black only runs on py37"; fi   # Run black for Python 3.7 only
  - mongo --eval 'db.version();'    # Make sure mongo is awake

script:
  - tox -e $(echo py$TRAVIS_PYTHON_VERSION-mg$PYMONGO | tr -d . | sed -e 's/pypypy/pypy/') -- --with-coverage

# For now only submit coveralls for Python v2.7. Python v3.x currently shows
# 0% coverage. That's caused by 'use_2to3', which builds the py3-compatible
# code in a separate dir and runs tests on that.
after_success:
- if [[ $TRAVIS_PYTHON_VERSION == '2.7' ]]; then coveralls --verbose; fi

notifications:
  irc: irc.freenode.org#mongoengine

# Only run builds on the master branch and GitHub releases (tagged as vX.Y.Z)
branches:
  only:
  - master
  - /^v.*$/

# Whenever a new release is created via GitHub, publish it on PyPI.
deploy:
  provider: pypi
  user: the_drow
  password:
    secure: QMyatmWBnC6ZN3XLW2+fTBDU4LQcp1m/LjR2/0uamyeUzWKdlOoh/Wx5elOgLwt/8N9ppdPeG83ose1jOz69l5G0MUMjv8n/RIcMFSpCT59tGYqn3kh55b0cIZXFT9ar+5cxlif6a5rS72IHm5li7QQyxexJIII6Uxp0kpvUmek=

  # Create a source distribution and a pure python wheel for faster installs.
  distributions: "sdist bdist_wheel"

  # Only deploy on tagged commits (aka GitHub releases) and only for the parent
  # repo's builds running Python v2.7 along with PyMongo v3.x and MongoDB v3.4.
  # We run Travis against many different Python, PyMongo, and MongoDB versions
  # and we don't want the deploy to occur multiple times).
  on:
    tags: true
    repo: MongoEngine/mongoengine
    condition: ($PYMONGO = 3.x) && ($MONGODB = 3.4.17)
    python: 2.7
